services:
  config-server:
    image: rourory/config-server:${SERVICE_VERSION:-latest}
    ports:
      - ${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}
      - "5007:5007"
      - "8886:8886"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    networks:
      - ${GLOBAL_NETWORK:-services}
    environment:
      - SERVER_PORT=${CONFIG_SERVER_PORT}

  mastodon-to-kafka-service:
    restart: always
    depends_on:
      config-server:
        condition: service_started
      schema-registry:
        condition: service_started
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
    image: rourory/mastodon-to-kafka-service:${SERVICE_VERSION:-latest}
    user: root
    ports:
      - "5005:5005"
      - "8181:8181"
    volumes:
      - "./docker-logs:/workspace/mastodon-to-kafka-service/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSORVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=mastodon-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - SPRING_CLOUD_CONFIG_URI=http://config-server:${CONFIG_SERVER_PORT}
    networks:
      - ${GLOBAL_NETWORK:-services}

  kafka-to-elastic-service:
    restart: always
    depends_on:
      config-server:
        condition: service_started
      schema-registry:
        condition: service_started
      elastic-1:
        condition: service_healthy
      elastic-2:
        condition: service_healthy
      elastic-3:
        condition: service_healthy
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3:
        condition: service_healthy
    image: rourory/kafka-to-elastic-service:${SERVICE_VERSION:-latest}
    user: root
    ports:
      - "5006:5006"
      - "8182:8182"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSORVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092"
      - "KAFKA-CONFIG_TOPIC-NAME=mastodon-topic"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - SPRING_CLOUD_CONFIG_URI=http://config-server:${CONFIG_SERVER_PORT}
      - ELASTIC_CONFIG_CONNECTION_URL=http://elastic-1:9200
      - xpack.security.enabled=false
    networks:
      - ${GLOBAL_NETWORK:-services}

  elastic-query-service:
    restart: always
    depends_on:
      config-server:
        condition: service_started
      elastic-1:
        condition: service_healthy
      elastic-2:
        condition: service_healthy
      elastic-3:
        condition: service_healthy
    image: rourory/elastic-query-service:${SERVICE_VERSION:-latest}
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
    ports:
      - "5008:5008"
      - "8183:8183"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSORVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - SPRING_CLOUD_CONFIG_URI=http://config-server:${CONFIG_SERVER_PORT}
      - ELASTIC_CONFIG_CONNECTION_URL=http://elastic-1:9200
    networks:
      - ${GLOBAL_NETWORK:-services}